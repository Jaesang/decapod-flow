apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: lma-federation
  namespace: argo
spec:
  entrypoint: prepare
  arguments:
    parameters:
    - name: site_name
      value: "hanu-reference"
    - name: site_repo_url
      value: "https://github.com/openinfradev/decapod-site"
    - name: manifest_repo_url
      value: "https://github.com/openinfradev/decapod-manifests"
    - name: revision
      value: main
  templates:
  - name: prepare
    inputs: {}
    outputs: {}
    metadata: {}
    steps:
      - - name: configuration
          template: configuration
          arguments: {}
      - - name: deploy
          template: deploy
          arguments: {}
  - name: configuration
    inputs: {}
    outputs: {}
    metadata: {}
    container:
      name: config
      image: 'k8s.gcr.io/hyperkube:v1.18.8'
      command:
        - /bin/bash
        - '-c'
        - |
          kubectl get ns lma
          if [[ $? != 0 ]]; then
            kubectl create ns lma
            kubectl label ns lma name=lma
            kubectl label ns lma taco-tls=enabled
          fi
      resources: {}
      imagePullPolicy: IfNotPresent
    activeDeadlineSeconds: 120
  - name: deploy
    dag:
      tasks:
      - name: operator
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { "app_group": "lma", "path": "prometheus-operator", "namespace": "lma"  },
                { "app_group": "lma", "path": "eck-operator", "namespace": "elastic-system" },
                { "app_group": "lma", "path": "fluentbit-operator", "namespace": "lma" }
              ]
        dependencies: []
      - name: logging
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { "app_group": "lma", "path": "eck-resource", "namespace": "lma" },
                { "app_group": "lma", "path": "fluentbit", "namespace": "lma" },
                { "app_group": "lma", "path": "kubernetes-event-exporter", "namespace": "lma" }
              ]
        dependencies: [operator]
      - name: prepare-lma
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { "app_group": "lma", "path": "thanos-config", "namespace": "lma" },
                { "app_group": "lma", "path": "prepare-etcd-secret", "namespace": "lma" }
              ]
        dependencies: [operator]

      - name: prometheus
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { "app_group": "lma", "path": "prometheus", "namespace": "lma" },
                { "app_group": "lma", "path": "kube-state-metrics", "namespace": "lma" },
                { "app_group": "lma", "path": "prometheus-process-exporter", "namespace": "lma" },
                { "app_group": "lma", "path": "prometheus-pushgateway", "namespace": "lma" },
                { "app_group": "lma", "path": "prometheus-node-exporter", "namespace": "lma" },
                { "app_group": "lma", "path": "prometheus-adapter", "namespace": "lma" },
                { "app_group": "lma", "path": "addons", "namespace": "lma" }
              ]
        dependencies: [prepare-lma]

      - name: federation
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { "app_group": "lma", "path": "thanos", "namespace": "lma" }
              ]
        dependencies: [prometheus,logging]

      - name: grafana
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { "app_group": "lma", "path": "grafana", "namespace": "lma" }
              ]
        dependencies: [federation]
